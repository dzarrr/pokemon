{"version":3,"sources":["serviceWorker.js","PokemonTable.js","PokemonCard.js","PokemonDetail.js","PokemonList.js","MyPokemonTable.js","MyPokemon.js","index.js"],"names":["Boolean","window","location","hostname","match","PokemonTable","props","pokemons","nextURL","prevURL","tableBody","map","pokemon","ownedPokemons","JSON","parse","localStorage","getItem","name","N_ownedPokemons","nicknames","length","key","onClick","showDetail","className","onButtonClick","disabled","PokemonCard","types","imgURL","moves","undefined","charAt","toUpperCase","slice","join","move","src","alt","align","onCatchButtonClick","PokemonDetail","this","handleButtonClick","isModalActive","closeModal","aria-label","React","Component","PokemonList","state","selectedPokemon","url","axios","get","then","res","setState","data","results","next","previous","forEach","setItem","stringify","Math","random","alert","nickname","prompt","currentPokemon","toLowerCase","push","sprites","front_default","type","index","MyPokemon","setTable","pokemonNames","Object","keys","pokemonState","myPokemon","onReleasePokemon","i","splice","MyPokemonTable","routing","to","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e06ea709.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './PokemonTable.css';\n\nfunction PokemonTable(props){\n  const { pokemons, nextURL, prevURL } = props\n\n  const tableBody = pokemons.map( pokemon => {\n    let ownedPokemons = JSON.parse(window.localStorage.getItem(pokemon.name));\n    let N_ownedPokemons = ownedPokemons === null ? 0 : ownedPokemons.nicknames.length\n    return(\n      <tr key={pokemon.name} onClick={() => props.showDetail(pokemon.name)}>\n        <td>{pokemon.name}</td>\n        <td>{N_ownedPokemons}</td>\n      </tr>\n    )\n  })\n\n  return(\n    <div className=\"table-container\">\n      <div className=\"container\">\n        <table className=\"table is-hoverable\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Owned</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableBody}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"container button-container\">\n        <button className=\"button is-pulled-left\" onClick={() => props.onButtonClick(prevURL)} disabled={prevURL === null}>\n          Prev\n        </button>\n        <button className=\"button is-pulled-right\" onClick={() => props.onButtonClick(nextURL)} disabled={nextURL === null}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonTable;","import React from 'react';\nimport './PokemonCard.css';\n\nfunction PokemonCard(props){\n  let { types, imgURL, name, moves } = props;\n  name = name !== undefined ? name.charAt(0).toUpperCase() + name.slice(1) : name;\n  types = types !== undefined ? types.join(\" \") : types;\n  if (moves !== undefined) {\n    moves = moves.map((move) => {\n      return <li key={move.move.name}>{move.move.name}</li>;\n    });\n  }\n\n  return(\n        <div className=\"card container\">\n          <div className=\"card-image\">\n            <figure className=\"image is-128x128 container\">\n              <img src={imgURL} alt=\"pokemon sprite\"/>\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"content\">\n              <p className=\"title is-3\" align=\"center\">{name}</p>\n              <p className=\"subtitle is-4\" align=\"center\">{types}</p>\n              <div className=\"has-text-centered\">\n                <button onClick={() => props.onCatchButtonClick(name)} className=\"button\">CATCH</button>\n              </div>\n              <p className=\"subtitle is-6\" align=\"left\">Move List</p>\n              <ul>\n                {moves}\n              </ul>\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default PokemonCard;","import React from 'react';\nimport PokemonCard from './PokemonCard.js';\n\nexport default class PokemonDetail extends React.Component{\n  render(){\n    const { imgURL, name, types, moves, handleButtonClick } = this.props;\n    return (\n      <div className={`modal ${this.props.isModalActive ? 'is-active' : ''}`}>\n      <div className=\"modal-background\" onClick={() => this.props.closeModal()}></div>\n      <div className=\"modal-content\">\n        <PokemonCard\n          name={name}\n          imgURL={imgURL}\n          types={types}\n          moves={moves}\n          onCatchButtonClick={handleButtonClick}\n        />\n      </div>\n      <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.props.closeModal()}></button>\n    </div>\n    )\n  }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport PokemonTable from './PokemonTable.js';\nimport PokemonDetail from './PokemonDetail.js'\n\nexport default class PokemonList extends React.Component {\n  state = {\n    pokemons: [],\n    nextURL: \"\",\n    prevURL: \"\",\n    isModalActive: false,\n    selectedPokemon:{},\n  }\n\n  onButtonClick = (url) => {\n    axios.get(url)\n      .then(res => {\n        this.setState({\n          pokemons: res.data.results,\n          nextURL: res.data.next,\n          prevURL: res.data.previous,\n        })\n        this.state.pokemons.forEach(pokemon => {\n          if (window.localStorage.getItem(pokemon.name) === null){\n            window.localStorage.setItem(pokemon.name, JSON.stringify({nicknames: []}))\n          }\n        });\n      })\n  }\n\n  closeModal = () => {\n    this.setState({\n      isModalActive: false,\n    })\n  }\n\n  onCatchButtonClick = (pokemon) => {\n    if (Math.random() < 0.5){\n      alert(`Failed to catch ${pokemon}`);\n    } else {\n      let nickname = prompt(`Catched wild ${pokemon}!\\nWould you like to give nickname to your captured pokemon?`);\n      alert(nickname);\n      let currentPokemon = JSON.parse(window.localStorage.getItem(pokemon.toLowerCase()));\n      currentPokemon.nicknames.push(nickname);\n      window.localStorage.setItem(pokemon.toLowerCase(), JSON.stringify(currentPokemon));\n      this.closeModal();\n    }\n  }\n\n  showDetail = (pokemon) => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}/`)\n      .then(res => {\n        this.setState({\n          isModalActive: true,\n          selectedPokemon: {\n            sprites: res.data.sprites.front_default,\n            types: res.data.types.map((type) => type.type.name),\n            name: res.data.name,\n            moves: res.data.moves\n          }\n        })\n      })\n  }\n\n  componentDidMount() {\n    axios.get('https://pokeapi.co/api/v2/pokemon')\n      .then(res => {\n        this.setState({\n          pokemons: res.data.results,\n          nextURL: res.data.next,\n          prevURL: res.data.previous,\n        })\n\n        this.state.pokemons.forEach(pokemon => {\n          if (window.localStorage.getItem(pokemon.name) === null){\n            window.localStorage.setItem(pokemon.name, JSON.stringify({nicknames: []}))\n          }\n        });\n      })\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <h5 className=\"title is-5\" align=\"center\">Pokemon List</h5>\n        <PokemonTable pokemons={this.state.pokemons} nextURL={this.state.nextURL} \n          prevURL={this.state.prevURL}\n          onButtonClick={this.onButtonClick}\n          showDetail={this.showDetail}\n        />\n        <PokemonDetail\n          isModalActive={this.state.isModalActive}\n          closeModal={this.closeModal}\n          imgURL={this.state.selectedPokemon.sprites}\n          types={this.state.selectedPokemon.types}\n          name={this.state.selectedPokemon.name}\n          moves={this.state.selectedPokemon.moves}\n          handleButtonClick={this.onCatchButtonClick}\n        />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './PokemonTable.css';\n\nfunction PokemonTable(props){\n  const { pokemons } = props\n\n  const tableBody = pokemons.map( (pokemon, index) => {\n    return(\n      <tr key={index}>\n        <td>{pokemon.name}</td>\n        <td>{pokemon.nickname}</td>\n        <td>\n          <button className=\"button is-danger is-small is-outlined\" onClick={ () => props.onButtonClick(pokemon.name, pokemon.nickname)}>\n            release\n          </button>\n        </td>\n      </tr>\n    )\n  })\n\n  return(\n    <div className=\"table-container\">\n      <div className=\"container\">\n        <table className=\"table is-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Nickname</th>\n              <th>Release</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableBody}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonTable;","import React from 'react';\nimport MyPokemonTable from './MyPokemonTable.js';\n\nexport default class MyPokemon extends React.Component {\n  state = {\n    pokemons: [],\n  }\n\n  setTable = () => {\n    let pokemons = { ...localStorage };\n    let pokemonNames = Object.keys(pokemons);\n    let pokemonState = [];\n\n    pokemonNames.forEach((name) => {\n      let myPokemon = JSON.parse(pokemons[name]).nicknames\n      if (myPokemon.length > 0){\n        myPokemon.forEach((nickname) => {\n          pokemonState.push({\n            name,\n            nickname\n          });\n        })\n      }\n    })\n\n    this.setState({\n      pokemons: pokemonState,\n    });\n  }\n\n  componentDidMount() {\n    this.setTable();\n  }\n\n  onReleasePokemon = (name, nickname) => {\n    let pokemons = JSON.parse(window.localStorage.getItem(name));\n    for (let i = 0; i < pokemons.nicknames.length; i++){\n      if (pokemons.nicknames[i] === nickname){\n        pokemons.nicknames.splice(i, 1);\n      }\n    }\n    window.localStorage.setItem(name, JSON.stringify(pokemons));\n    this.setTable();\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <h5 className=\"title is-5\" align=\"center\">My Pokemon List</h5>\n        <MyPokemonTable pokemons={this.state.pokemons} \n          onButtonClick={this.onReleasePokemon}\n          setTable={this.setTable}\n        />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport PokemonList from './PokemonList';\nimport MyPokemon from './MyPokemon';\n\nconst routing = (\n  <Router>\n    <div>\n      <div className=\"tabs\">\n        <ul>\n          <li>\n            <Link to=\"/list\">Pokemon List</Link>\n          </li>\n          <li>\n            <Link to=\"/mypokemon\">My Pokemon</Link>\n          </li>\n        </ul>\n      </div>\n      <Route exact path=\"/pokemon\" component={PokemonList}/>\n      <Route exact path=\"/list\" component={PokemonList} />\n      <Route exact path=\"/mypokemon\" component={MyPokemon} />\n    </div>\n  </Router>\n)\nReactDOM.render(\n  <React.StrictMode>\n    {routing}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}